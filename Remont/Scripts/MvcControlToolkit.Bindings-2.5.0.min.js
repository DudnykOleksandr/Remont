window.mvcct = window.mvcct || {}; mvcct.utils = mvcct.utils || {}; mvcct.core = mvcct.core || {}; (function () { var b = []; var a = []; var c = {}; mvcct.core.resetModuleResults = function (e) { a.push({ results: b, mNames: c }); b = []; c = {}; if (e) { for (var d = 0; d < e.length; d++) { c[e[d]] = d } } }; mvcct.core.moduleResult = function (d) { b.push(d) }; mvcct.core.withIncludedModules = function (e) { var d = b; var g = c; if (d) { d.push(g) } var f = a.pop(); b = f.results; c = f.mNames; if (mvcct.utils.isFunction(e)) { return e.apply(this, d) } }; mvcct.core.defaultModuleRouting = function (i, d, f) { if (!f) { return null } var j = f[f.length - 1]; if (j) { var h = mvcct.ko.dynamicTemplates.getContext(i); vprefix = h ? h.vprefix : ""; if (vprefix) { vprefix = vprefix.replace(/\//g, "_") + "_" } var e = j[(vprefix || "") + d]; if (e === 0 || e) { var g = f[e]; if (mvcct.utils.isFunction(g)) { return g(i) } else { return g } } else { return null } } } })(); (function () { var d = "RS_23459_86745_ZU"; var b = 0; var e = {}; mvcct.utils.uniqueTags = {}; mvcct.utils.uniqueTags.reset = function () { b = 0; e = {} }; mvcct.utils.uniqueTags.newTag = function (g) { var f = 0; if (g) { f = e[g] || 0; e[g] = f + 1 } else { f = b; b++ } return f }; mvcct.utils.uniqueTags.adjustId = function (j, h, i) { if (!j) { return j } if (j.indexOf(d) != 0) { return j } else { j = j.substring(d.length); var g = j.indexOf("_A"); if (g < 0) { return j } j = j.substring(g + 2) } var f = MvcControlsToolkit_TemplateId({ ItemPrefix: "" }, h); if (i.indexOf(f) != 0) { f = MvcControlsToolkit_TemplateId({ SingleD: true, ItemPrefix: "" }, h) } return f + j }; mvcct.utils.evalAndDestroyTemplateScripts = function (f) { var j = []; var k = function (i) { j.push(i) }; var g = jQuery.fn.ready; jQuery.fn.ready = k; try { GlobalEvalScriptAndDestroy(f) } finally { jQuery.fn.ready = g } for (var h = 0; h < j.length; h++) { j[h]() } }; var c = null; var a = null; mvcct.utils.handleTimingOpen = function () { c = []; var g = function (h) { c.push(h) }; var f = jQuery.fn.ready; jQuery.fn.ready = g }; mvcct.utils.handleTimingClose = function () { if (a) { jQuery.fn.ready = a } if (c) { for (var f = 0; f < c.length; f++) { c[f]() } } } })(); function MvcControlsToolkit_ClientViewModel_Init(b, c, a) { b.save = function () { document.getElementById(c).value = mvcct.utils.stringify(ko.mapping.toJS(this)) }; b.validateAndSave = function () { if (MvcControlsToolkit_FormIsValid(c, a)) { document.getElementById(c).value = ko.mapping.toJSON(this); return true } return false }; b.saveAndSubmit = function () { if (this.validateAndSave()) { $("#" + c).parents("form").submit() } }; b.saveAndSubmitAlone = function (d) { if (MvcControlsToolkit_FormIsValid(d, a)) { this.save(); $("#" + c).parents("form").submit() } }; $(document).ready(function () { $("#" + c).parents("form").submit(function () { if (MvcControlsToolkit_FormIsValid(c, a)) { if (mvcct.clientsubmit) { mvcct.clientsubmit.execute() } b.save() } return true }) }) } function MvcControlsToolkit_NewTemplateName(a, c, d) { var b = !c.ModelPrefix || (!c._cachedView_ && (!c._oldValue_ || !c._oldValue_().up)); if (b) { c.ModelId = a.ModelId; c.ModelPrefix = a.ModelPrefix; c._tag = undefined } c.ModelId = ko.utils.unwrapObservable(c.ModelId); c.ModelPrefix = ko.utils.unwrapObservable(c.ModelPrefix); if (a.Single) { c._tag = (c._tag === undefined) ? -1 : c._tag } else { if (c._tag === undefined) { c._tag = mvcct.utils.uniqueTags.newTag(d ? null : c.ModelId) } } c._tag = ko.utils.unwrapObservable(c._tag); if (!c._inserted) { c._inserted = ko.observable(false) } if (!c._modified) { c._modified = ko.observable(false) } return "" } function MvcControlsToolkit_TemplateName(a, b) { return b._tag < 0 && !a.SingleD ? b.ModelPrefix : (a.SingleD ? (b._tag > -1 ? b.ModelPrefix + "_detail[" + b._tag + "]" : b.ModelPrefix + "_detail") : b.ModelPrefix + "[" + b._tag + "]" + a.ItemPrefix) } function MvcControlsToolkit_TemplateId(a, b) { return b._tag < 0 && !a.SingleD ? b.ModelId : (a.SingleD ? (b._tag > -1 ? b.ModelId + "_detail_" + b._tag + "_" : b.ModelId + "_detail") : b.ModelId + "_" + b._tag + "_" + a.ItemPrefix) } var MvcControlsToolkit_TemplatingLevel = 0; function MvcControlsToolkit_InitializeCreatedNodes(c, b, a, e, d) { MvcControlsToolkit_TemplatingLevel--; if (c == null || a) { return } toApply = function () { for (var f = 0; f < c.length; f++) { var g = $(c[f]); if (g.data("isCached") || false) { return } if (b && e) { jQuery.validator.unobtrusive.parseExt(c[f]) } if (!a) { mvcct.utils.evalAndDestroyTemplateScripts(c[f]) } } }; toApply() } MvcControlsToolkit_ServerErrors_Last = null; mvcct.utils.keepServerErrors = true; function MvcControlsToolkit_ServerErrors(c, d, a) { if (!c) { c = MvcControlsToolkit_ServerErrors_Last } if (!c) { return } MvcControlsToolkit_ServerErrors_Last = []; if (!a && d) { a = d + "_detail" } var b = function () { for (var l = 0; l < c.length; l++) { var e = c[l]; if (e == "") { continue } var m = e.id; var g = e.name; if (d) { if (g.length > d.length && g.charAt(d.length) == "[") { g = g.slice(d.length); g = a + g } else { g = g.slice(d.length); g = a + g } m = mvcct.utils.idFromName(g) } var k = $("#" + m); if (k.length == 0 || mvcct.utils.keepServerErrors) { MvcControlsToolkit_ServerErrors_Last.push(e); if (k.length == 0) { continue } } if (d) { e.detailId = m; e.detailName = g } var h = k.parents("form").first(); if (h.length == 0) { continue } if (!k.hasClass("input-validation-error")) { k.addClass("input-validation-error") } var n = k.attr("data-companionpostfix"); if (typeof n !== "undefined" && n !== false) { var o = $("#" + m + n); if (o.length > 0 && !o.hasClass("input-validation-error")) { o.addClass("input-validation-error") } } else { if (k.attr("data-element-type") == "TypedEditDisplay") { $("#" + m + "_display").hide(); $("#" + m).show() } else { if (!mvcct.utils.keepServerErrors && k.attr("type") == "hidden") { MvcControlsToolkit_ServerErrors_Last.push(e) } } } var j = $(h).find("[data-valmsg-for='" + g + "']"); if (j.length > 0) { j.removeClass("field-validation-valid").addClass("field-validation-error"); var f = $.parseJSON(j.attr("data-valmsg-replace")) !== false; if (f) { j.empty(); $(e.errors[0]).appendTo(j) } } } }; setTimeout(b, 0) } (function () { var a = "__ko_mapping__"; var c; var b = { include: ["_destroy"], ignore: [], copy: [] }; function e(g, f) { g = g || {}; if ((g.create instanceof Function) || (g.update instanceof Function) || (g.key instanceof Function) || (g.arrayChanged instanceof Function)) { g = { "": g } } if (f) { g.ignore = d(f.ignore, g.ignore); g.include = d(f.include, g.include); g.copy = d(f.copy, g.copy) } g.ignore = d(g.ignore, c.ignore); g.include = d(g.include, c.include); g.copy = d(g.copy, c.copy); g.mappedProperties = g.mappedProperties || {}; return g } function d(g, f) { if (!(g instanceof Array)) { if (typeof g === "undefined") { g = [] } else { g = [g] } } if (!(f instanceof Array)) { if (typeof f === "undefined") { f = [] } else { f = [f] } } return g.concat(f) } ko.mapping.toJS = function (g, f) { c = ko.mapping.defaultOptions(); if (!c) { ko.mapping.defaultOptions({ include: b.include.slice(0), ignore: b.ignore.slice(0), copy: b.copy.slice(0) }) } if (arguments.length == 0) { throw new Error("When calling ko.mapping.toJS, pass the object you want to convert.") } if (!(c.ignore instanceof Array)) { throw new Error("ko.mapping.defaultOptions().ignore should be an array.") } if (!(c.include instanceof Array)) { throw new Error("ko.mapping.defaultOptions().include should be an array.") } if (!(c.copy instanceof Array)) { throw new Error("ko.mapping.defaultOptions().copy should be an array.") } f = e(f, g[a]); return ko.mapping.visitModel(g, function (h) { var i = ko.utils.unwrapObservable(h); if (Object.prototype.toString.call(i) === "[object Date]") { i = "\\/Date(" + i.getTime() + ")\\/" } return i }, f) } })(); ko.utils.arrayBestIndexOf = function (h, e, a) { if (!a) { return ko.utils.arrayIndexOf(h, e) } var b = h.length; if (b == 0) { return -1 } if (e === undefined) { return 0 } var g = Math.abs(h[0] - e); var d = 0; if (h[0] === undefined) { if (h.length <= 1) { return -1 } g = Math.abs(h[1] - e); d = 1 } var f; for (var c = 1; c < b; c++) { f = Math.abs(h[c] - e); if (f < g) { d = c; g = f } } return d }; ko.bindingHandlers.value = { init: function (e, f, d) { function i(j, k) { j = j || ""; if (k.length > j.length) { return false } return j.substring(0, k.length) === k } var c = d()["valueType"] || MvcControlsToolkit_DataType_String; var g = $(e).attr("data-element-type") || ""; var h = $(e).attr("data-sync-event") || ""; var a = ["change"]; var b = d()["valueUpdate"]; if (h) { a = [h] } else { if (g != "") { a = [g + "_Changed"] } } if (b) { if (typeof b == "string") { b = [b] } ko.utils.arrayPushAll(a, b); a = ko.utils.arrayGetDistinctValues(a) } a.push("changedByCode"); ko.utils.arrayForEach(a, function (j) { var l = false; if (g == "" && j.length > 7 && i(j, "after")) { l = true; j = j.substring("after".length) } var k = l ? function (m) { setTimeout(m, 0) } : function (m) { m() }; ko.utils.registerEventHandler(e, j, function () { k(function () { var n = f(); var p = null; if (g != "") { p = window["MvcControlsToolkit_" + g + "_Get"](e, c) } else { p = MvcControlsToolkit_Parse(ko.selectExtensions.readValue(e), c) } var m = $(e).data("mvcct-oldvalue"); if (isNaN(p) && g == "") { p = ko.selectExtensions.readValue(e) } if (c == MvcControlsToolkit_DataType_DateTime && p && m && $(e).attr("data-date-only") == "true" && mvcct.utils.isDate(m)) { p = new Date(p.getFullYear(), p.getMonth(), p.getDate(), m.getHours(), m.getMinutes(), m.getSeconds(), m.getMilliseconds()) } if (ko.isWriteableObservable(n)) { n(p) } else { var o = d(); if (o._ko_property_writers && o._ko_property_writers["value"]) { o._ko_property_writers["value"](p) } } }) }) }) }, update: function (k, n, g) { var d = g()["valueType"] || MvcControlsToolkit_DataType_String; var e = g()["formatString"] || ""; var o = $(k).attr("data-element-type") || ""; if (o != "") { eventName = o + "_changed" } var b = ko.utils.unwrapObservable(n()); var l = null; if (o != "") { try { l = window["MvcControlsToolkit_" + o + "_Get"](k, d) } catch (p) { } } else { l = MvcControlsToolkit_Parse(ko.selectExtensions.readValue(k), d) } if (isNaN(l) && o == "") { l = ko.selectExtensions.readValue(k) } if (d == MvcControlsToolkit_DataType_DateTime && l && b && $(k).attr("data-date-only") == "true" && mvcct.utils.isDate(b)) { l = new Date(l.getFullYear(), l.getMonth(), l.getDate(), b.getHours(), b.getMinutes(), b.getSeconds(), b.getMilliseconds()) } var q = (b != l); if (d == MvcControlsToolkit_DataType_DateTime && b && l) { q = (b.getTime() != l.getTime()) } if (q) { if (l instanceof Array) { if (b instanceof Array) { if (b.length != l.length) { q = true } else { q = false; for (var h = 0, f = b.length; h < f; h++) { if (b[h] != l[h]) { q = true; break } } } } else { q = true } } else { if ((b === 0) && (l !== 0) && (l !== "0")) { q = true } } } if (q) { $(k).data("mvcct-oldvalue", b); var a = null; var m = null; if (o != "") { m = function () { window["MvcControlsToolkit_" + o + "_Set"](k, b, e, d); MvcControlsToolkit_RefreshWidget(k) } } else { a = MvcControlsToolkit_ToString(b, e, d); m = function () { if (k.tagName == "SELECT" && d == MvcControlsToolkit_DataType_Float) { if (k.options.length > 0) { var t = Math.abs(MvcControlsToolkit_Parse(ko.selectExtensions.readValue(k.options[0]), d) - b); var r = 0; for (var j = k.options.length - 1; j >= 0; j--) { var s = Math.abs(MvcControlsToolkit_Parse(ko.selectExtensions.readValue(k.options[j]), d) - b); if (s < t) { t = s; r = j } } k.selectedIndex = r } } else { ko.selectExtensions.writeValue(k, a) } MvcControlsToolkit_RefreshWidget(k) } } ko.utils.triggerEvent(k, "modelChanged"); m(); var c = k.tagName == "SELECT"; if (c) { setTimeout(m, 0) } } if (k.tagName == "SELECT") { if (o != "") { l = window["MvcControlsToolkit_" + o + "_Get"](k, d) } else { l = MvcControlsToolkit_Parse(ko.selectExtensions.readValue(k), d) } if (l !== b) { ko.utils.triggerEvent(k, "change") } } } }; ko.bindingHandlers.selectedOptions = { getSelectedValuesFromSelectNode: function (g, h, o) { var p = []; var b = g.childNodes; for (var m = 0, k = b.length; m < k; m++) { var e = b[m]; if (e.tagName == "OPTGROUP") { var a = e.childNodes; for (var d = 0, f = a.length; d < f; d++) { var c = a[d]; if ((c.tagName == "OPTION") && (c.selected || o != null)) { p.push(MvcControlsToolkit_Parse(ko.selectExtensions.readValue(c), h)) } } } else { if ((e.tagName == "OPTION") && (e.selected || o != null)) { p.push(MvcControlsToolkit_Parse(ko.selectExtensions.readValue(e), h)) } } } return p }, init: function (b, c, d) { var e = d()["valueType"] || MvcControlsToolkit_DataType_String; var a = function () { var g = c(); var h = ko.bindingHandlers.selectedOptions.getSelectedValuesFromSelectNode(this, e); if (ko.isWriteableObservable(g)) { g(h) } else { var f = d(); if (f._ko_property_writers && f._ko_property_writers["value"]) { f._ko_property_writers["value"](h) } } }; ko.utils.registerEventHandler(b, "change", a); ko.utils.registerEventHandler(b, "changedByCode", a) }, update: function (o, q, m) { if (o.tagName != "SELECT") { throw new Error("values binding applies only to SELECT elements") } var h = m()["valueType"] || MvcControlsToolkit_DataType_String; var d = ko.utils.unwrapObservable(q()); if (d && typeof d.length == "number") { var s = ko.bindingHandlers.selectedOptions.getSelectedValuesFromSelectNode(o, h, true); var r = []; for (var p = 0, k = d.length; p < k; p++) { r.push(ko.utils.arrayBestIndexOf(s, d[p], (h == MvcControlsToolkit_DataType_Float))) } var b = o.childNodes; var t = 0; for (var p = 0, k = b.length; p < k; p++) { var f = b[p]; if (f.tagName == "OPTGROUP") { var a = f.childNodes; for (var e = 0, g = a.length; e < g; e++) { var c = a[e]; if (c.tagName == "OPTION") { c.selected = ko.utils.arrayBestIndexOf(r, t, false) >= 0; t++ } } } else { if (f.tagName == "OPTION") { f.selected = ko.utils.arrayBestIndexOf(r, t, false) >= 0; t++ } } } } ko.utils.triggerEvent(o, "modelChanged"); MvcControlsToolkit_RefreshWidget(o) } }; ko.bindingHandlers.checked = { init: function (a, c, d) { var e = d()["valueType"] || MvcControlsToolkit_DataType_String; var b = function () { var h; if (a.type == "checkbox") { h = a.checked } else { if ((a.type == "radio") && (a.checked)) { h = MvcControlsToolkit_Parse(a.value, e) } else { return } } var f = c(); if ((a.type == "checkbox") && (ko.utils.unwrapObservable(f) instanceof Array)) { var j = MvcControlsToolkit_Parse(a.value, e); var g = ko.utils.arrayIndexOf(ko.utils.unwrapObservable(f), MvcControlsToolkit_Parse(j, e)); if (a.checked && (g < 0)) { f.push(j) } else { if ((!a.checked) && (g >= 0)) { f.splice(g, 1) } } } else { if (ko.isWriteableObservable(f)) { if (f() !== h) { f(h) } } else { var i = d(); if (i._ko_property_writers && i._ko_property_writers["checked"]) { i._ko_property_writers["checked"](h) } } } return true }; ko.utils.registerEventHandler(a, "click", b); ko.utils.registerEventHandler(a, "changedByCode", b); if ((a.type == "radio") && !a.name) { ko.bindingHandlers.uniqueName["init"](a, function () { return true }) } }, update: function (b, c, e) { var d = ko.utils.unwrapObservable(c()); var f = e()["valueType"] || MvcControlsToolkit_DataType_String; if (b.type == "checkbox") { if (d instanceof Array) { b.checked = ko.utils.arrayIndexOf(d, MvcControlsToolkit_Parse(b.value, f)) >= 0 } else { b.checked = d } if (d && ko.utils.isIe6) { b.mergeAttributes(document.createElement("<input type='checkbox' checked='checked' />"), false) } } else { if (b.type == "radio") { var a = MvcControlsToolkit_Parse(b.value, f); b.checked = (a == d); if ((a == d) && (ko.utils.isIe6 || ko.utils.isIe7)) { b.mergeAttributes(document.createElement("<input type='radio' checked='checked' />"), false) } } } ko.utils.triggerEvent(b, "modelChanged"); MvcControlsToolkit_RefreshWidget(b) } }; ko.bindingHandlers.allowBindings = { init: function (c, b) { var a = ko.utils.unwrapObservable(b()); return { controlsDescendantBindings: !a } } }; ko.virtualElements.allowedBindings.allowBindings = true; ko.bindingHandlers.notAllowBindings = { init: function (c, b) { var a = ko.utils.unwrapObservable(b()); return { controlsDescendantBindings: a } } }; ko.virtualElements.allowedBindings.notAllowBindings = true; function MvcControlsToolkit_GetArrayString(value, arrayName, isNullable) { var allValues = eval(arrayName); if (value === null || value === undefined) { return allValues[0] } var index = 0; if (value === false) { index = 0 } else { if (value === true) { index = 1 } else { index = value } } if (isNullable) { index++ } return allValues[index] } ko.bindingHandlers.template["getCachedNodes"] = function (a) { return null }; (function () { var a = "__ko__cssValue"; ko.bindingHandlers.css = { update: function (c, e) { var f = ko.utils.unwrapObservable(e()); if (typeof f == "object") { for (var d in f) { var b = ko.utils.unwrapObservable(f[d]); ko.utils.toggleDomNodeCssClass(c, d, b) } } else { f = String(f || ""); ko.utils.toggleDomNodeCssClass(c, c[a], false); c[a] = f; ko.utils.toggleDomNodeCssClass(c, f, true) } } }; ko.nativeTemplateEngine.prototype.renderTemplateSource = function (b, f, k) { var d = f["$data"]; MvcControlsToolkit_TemplatingLevel++; var e = ko.bindingHandlers.template["getCachedNodes"](d); if (e != null) { $(e).data("isCached", true); return e } var i = b.text(); i = i.replace(/agkcvriopjvss/g, "script"); if (k.templateOptions && (k.templateOptions.ModelPrefix || k.templateOptions.ModelPrefix === "")) { MvcControlsToolkit_NewTemplateName(k.templateOptions, d); var j = MvcControlsToolkit_TemplateName(k.templateOptions, d); var h = MvcControlsToolkit_TemplateId(k.templateOptions, d); var c = j ? new RegExp(k.templateOptions.templateSymbol + "\\.A", "g") : new RegExp(k.templateOptions.templateSymbol + "\\.A\\.", "g"); var g = h ? new RegExp(k.templateOptions.templateSymbol + "_A", "g") : new RegExp(k.templateOptions.templateSymbol + "_A_", "g"); i = i.replace(c, j).replace(g, h) } return jQuery.parseHTML ? jQuery.parseHTML(i, null, true) : ko.utils.parseHtmlFragment(i) }; ko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine(); ko.setTemplateEngine(ko.nativeTemplateEngine.instance) })(); ko.jqueryTmplTemplateEngineExt = function () { var b = this.jQueryTmplVersion = (function () { if ((typeof (jQuery) == "undefined") || !(jQuery.tmpl)) { return 0 } try { if (jQuery.tmpl["tag"]["tmpl"]["open"].toString().indexOf("__") >= 0) { return 2 } } catch (d) { } return 1 })(); function a() { if (b < 2) { throw new Error("Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.") } } function c(e, f, d) { return jQuery.tmpl(e, f, d) } this["allowTemplateRewriting"] = false; this["renderTemplateSource"] = function (d, j, n) { n = n || {}; var g = j["$data"]; MvcControlsToolkit_TemplatingLevel++; var i = ko.bindingHandlers.template["getCachedNodes"](g); if (i != null) { $(i).data("isCached", true); return i } a(); var m = d.data("precompiled"); if (!m) { var l = d.text() || ""; var h = new RegExp(n.templateOptions.templateSymbol + "\\.A", "g"); var k = new RegExp(n.templateOptions.templateSymbol + "_A", "g"); l = l.replace(/agkcvriopjvss/g, "script").replace(h, "${MvcControlsToolkit_TemplateName($item, $data)}").replace(k, "${MvcControlsToolkit_TemplateId($item, $data)}"); l = "{{ko_with $item.koBindingContext}} ${MvcControlsToolkit_NewTemplateName($item, $data) }" + l + "{{/ko_with}}"; m = jQuery.template(null, l); d.data("precompiled", m) } var g = [g]; var e = jQuery.extend({ koBindingContext: j }, n.templateOptions); var f = c(m, g, e); f.appendTo(document.createElement("div")); jQuery.fragments = {}; return f }; this["createJavaScriptEvaluatorBlock"] = function (d) { return "{{ko_code ((function() { return " + d + " })()) }}" }; this["addTemplate"] = function (d, e) { document.write("<script type='text/html' id='" + d + "'>" + e + "<\/script>") }; if (b > 0) { jQuery.tmpl["tag"]["ko_code"] = { open: "__.push($1 || '');" }; jQuery.tmpl["tag"]["ko_with"] = { open: "with($1) {", close: "} " } } }; (function () { ko.jqueryTmplTemplateEngineExt.prototype = new ko.templateEngine(); ko.jqueryTmplTemplateEngineExt.instance = new ko.jqueryTmplTemplateEngineExt(); if (ko.jqueryTmplTemplateEngineExt.instance.jQueryTmplVersion > 0) { ko.setTemplateEngine(ko.jqueryTmplTemplateEngineExt.instance) } })(); ko.underscoreTemplateEngineExt = function () { }; ko.underscoreTemplateEngineExt.prototype = ko.utils.extend(new ko.templateEngine(), { allowTemplateRewriting: false, renderTemplateSource: function (b, g, k) { var d = g["$data"]; MvcControlsToolkit_TemplatingLevel++; var f = ko.bindingHandlers.template["getCachedNodes"](d); if (f != null) { $(f).data("isCached", true); return f } var j = b.data("precompiled"); if (!j) { var e = new RegExp(k.templateOptions.templateSymbol + "\\.A", "g"); var h = new RegExp(k.templateOptions.templateSymbol + "_A", "g"); var i = b.text() || ""; i = i.replace(/agkcvriopjvss/g, "script").replace(e, "<%= MvcControlsToolkit_TemplateName($options, $data) %>").replace(h, "<%= MvcControlsToolkit_TemplateId($options, $data) %>"); j = _.template("<% MvcControlsToolkit_NewTemplateName($options, $data) %> <% with($data) { %> " + i + " <% } %>"); b.data("precompiled", j) } var a = ko.utils.extend(ko.utils.extend({ $options: k.templateOptions || {} }, g), k.templateOptions || {}); var c = j(a).replace(/\s+/g, " "); return jQuery.parseHTML ? jQuery.parseHTML(c, null, true) : ko.utils.parseHtmlFragment(c) }, createJavaScriptEvaluatorBlock: function (a) { return "<%= " + a + " %>" } }); (function () { if ((typeof _ != "undefined") && _.template) { ko.underscoreTemplateEngineExt.instance = new ko.underscoreTemplateEngineExt(); ko.setTemplateEngine(ko.underscoreTemplateEngineExt.instance) } })(); (function () { function c(e, d) { return d ? (e._tag > -1 ? e.ModelPrefix + "[" + e._tag + "]" : null) : e.ModelPrefix } function b(j, e, m, p, h, o, f, n) { var k = null; var q = $(j); var g = false; if (mvcct.ko && mvcct.ko.isFrozen) { g = mvcct.ko.isFrozen(m) } if (mvcct.ko && mvcct.ko.isCachingViews && mvcct.ko.isCachingViews(m) && !m._inError) { mvcct.ko.freeze(m, e) } var d = c(m, p); for (var l = 0; l < e.length; l++) { if (e[l].nodeType == 1) { k = $(e[l]); k.addClass("mvcct-container-root"); if (!p) { k.addClass("mvcct-template-isSingle") } if (h) { k.addClass("mvcct-template-isDetail") } k.attr("data-name-prefix", d); k.data("mvcct-template-source", m); k.trigger("itemChange", new MvcControlsToolkit_changeData(k, "ItemToRefresh", 0)) } } if (o && o.afterRender && mvcct.ko && mvcct.ko.isFrozen && !g) { o.afterRender(e, m, n) } if (mvcct.ko && mvcct.ko.dynamicTemplates && mvcct.ko.dynamicTemplates.isBaseViewModel(m) && m.processInput) { m.processInput(e, m, n) } } function a(d) { if (d.nodeType != 1) { return } jx = $(d); if (!jx.hasClass("prevent-full-validation") && !$.validator.preventFullValidation && !MvcControlsToolkit_ServerErrors_Last) { jx.find(".mvcct-container-root").addBack().each(function () { var e = $(this); var f = e.attr("data-name-prefix"); var g = e.data("mvcct-template-source"); if (f && g) { $.validator.testEntity(g, this) } }) } } ko.bindingHandlers.template["originalUpdate"] = ko.bindingHandlers.template["update"]; ko.bindingHandlers.template["update"] = function (g, s, m, j, v) { var H = s(); var A = ko.utils.unwrapObservable(H); H = A.data; var M = A.afterRender; var D = v.dynamicTemplate; var z = A.foreach; var r = A.processingOptions || {}; var t = A.templateOptions || {}; var G = r.forceNoCache; var q = t.SingleD; var p = A.beforeRemove; v.$element = g; v.$referenceModel = (v.$parentContext ? v.$parentContext.$referenceModel : null) || v.$root; if (!v.recall && p && !z) { var E = []; for (var u = ko.virtualElements.firstChild(g) ; u; u = ko.virtualElements.nextSibling(u)) { E.push(u) } p(E, g, ko.utils.unwrapObservable(A.data), function (i) { v.dynamicTemplate = i; v.recall = true; ko.bindingHandlers.template.update(g, function () { return A }, m, j, v); v.recall = false; v.dynamicTemplate = null }, A.name, v); return } else { v.dynamicTemplate = null; v.recall = false } if (q) { var B = $(g); var K = B.data("_last_detail_"); var n = A.data; var l = ko.utils.unwrapObservable(n); B.data("_last_detail_", l); if (K) { delete K._last_detail_ } if (l) { l._last_detail_ = function () { return n } } if ($.validator && $.validator.testEntity && !$.validator.preventFullValidation && !MvcControlsToolkit_ServerErrors_Last) { for (var u = ko.virtualElements.firstChild(g) ; u; u = ko.virtualElements.nextSibling(u)) { a(u) } } } else { if (!z) { var e = []; for (var u = ko.virtualElements.firstChild(g) ; u; u = ko.virtualElements.nextSibling(u)) { if (u.nodeType != 1) { continue } var F = $(u); if (F.data("isCached")) { e.push(F) } if ($.validator && $.validator.testEntity) { a(u) } } var w = ko.utils.unwrapObservable(H); var J = H ? H._previousData : null; if (J) { J = J() } if (H && ko.isObservable(H)) { H._previousData = function () { return w } } var h = null; if (J && mvcct.ko && mvcct.ko.dynamicTemplates && mvcct.ko.dynamicTemplates.isBaseViewModel(J) && J.beforeRemove) { J.beforeRemove() } if (J && J._cachedView_) { h = J._cachedView_() } for (var C = 0; C < e.length; C++) { if (h) { e[C].appendTo(h) } else { e[C].detach() } } if (mvcct.ko.mustRefresh && mvcct.ko.mustRefresh(w)) { mvcct.ko.refreshFreeze(w, true); mvcct.ko.unfreeze(w, false, false, true) } if (D && D.script && mvcct.ko && mvcct.ko.isFrozen && !mvcct.ko.isFrozen(w)) { var L = D.script; if (mvcct.utils.isFunction(L)) { var y = (mvcct.utils.isFunction(A.name) && w) ? A.name(w, v, false, true) : null; L = L(w, y) } if (L) { D.afterRender = L.afterRender; D.beforeBind = L.beforeBind; if (L.isReference !== false) { v.$referenceModel = w } } else { D.afterRender = null; D.beforeBind = null; v.$referenceModel = w } if (L && D.property) { mvcct.utils.propertySet(w, D.property, L) } } if (mvcct.ko && mvcct.ko.dynamicTemplates && mvcct.ko.dynamicTemplates.isBaseViewModel(w)) { w._host = H; if (w._onPageLoaded) { w._onPageLoaded() } } } } var I = { unobtrusiveClient: true, fastNoInput: false, fastNoJavaScript: false, applyClientValidation: true }; ko.utils.extend(I, r); r = I; if (true) { if (p) { A.beforeRemove = function (i, N, x) { if (i.nodeType != 1) { return } p(i, N, x, function () { var O = x._last_detail_; if (O) { O()(null) } if (i.parentNode && $.validator && $.validator.testEntity) { a(i) } if (!mvcct.annotations || !mvcct.annotations.get(x, "__cachedNode__")) { ko.cleanNode(i) } if (i.parentNode) { i.parentNode.removeChild(i) } }) } } else { A.beforeRemove = function (x, O, N) { if (x.nodeType != 1) { return } var i = N._last_detail_; if (i) { i()(null) } if (x.parentNode && $.validator && $.validator.testEntity) { a(x) } if (!mvcct.annotations || !mvcct.annotations.get(N, "__cachedNode__")) { ko.cleanNode(x) } if (x.parentNode) { x.parentNode.removeChild(x) } } } } if (M) { A.afterRender = function (i, N) { mvcct.utils.currentModel = N; if (!mvcct.ko || !mvcct.ko.observableTracking) { MvcControlsToolkit_InitializeCreatedNodes(i, r.unobtrusiveClient, r.fastNoJavaScript, r.applyClientValidation) } b(g, i, N, z, q, D, H, v); M(i, N); if (q && mvcct.ko && mvcct.ko.detailErrors) { mvcct.ko.detailErrors(i, N) } mvcct.utils.currentModel = null } } else { A.afterRender = function (i, N) { mvcct.utils.currentModel = N; if (!mvcct.ko || !mvcct.ko.observableTracking) { MvcControlsToolkit_InitializeCreatedNodes(i, r.unobtrusiveClient, r.fastNoJavaScript, r.applyClientValidation) } b(g, i, N, z, q, D, H, v); if (q && mvcct.ko && mvcct.ko.detailErrors) { mvcct.ko.detailErrors(i, N) } mvcct.utils.currentModel = null } } if (mvcct.ko && mvcct.ko.observableTracking) { A.beforeBind = function (N, Q) { for (var O = 0; O < N.length; O++) { var P = $(N[O]); if (P.data("isCached") || false) { return true } } mvcct.utils.currentModel = Q; MvcControlsToolkit_InitializeCreatedNodes(N, r.unobtrusiveClient, r.fastNoJavaScript, r.applyClientValidation); if (D && D.beforeBind && mvcct.ko && mvcct.ko.isFrozen && !mvcct.ko.isFrozen(Q)) { D.beforeBind(N, Q) } mvcct.utils.currentModel = null; return false } } var f = null; if (G) { f = ko.bindingHandlers.template["getCachedNodes"]; ko.bindingHandlers.template["getCachedNodes"] = function (N) { var x = 0; return null } } var k = null; if (!z && mvcct.utils.isFunction(A.name)) { k = A.name; A.name = A.name(ko.utils.unwrapObservable(A.data), v) } ko.bindingHandlers.template["originalUpdate"](g, function () { return A }, m, j, v); if (k && !z) { A.name = k } if (G) { ko.bindingHandlers.template["getCachedNodes"] = f; for (var u = ko.virtualElements.firstChild(g) ; u; u = ko.virtualElements.nextSibling(u)) { if (u.nodeType != 1) { continue } var F = $(u); if (F.data("_treeview-data_")) { F.attr("data-nocache", "true") } } } var o = $(g).data("__mvcct_template_afterRender__") || null; if (o != null && (typeof (o.dispose) == "function")) { o.dispose() } $(g).data("__mvcct_template_afterRender__", null); if (typeof A.afterAllRender == "function") { var d = new ko.dependentObservable(function () { mvcct.utils.currentModel = v.$data; var i = ko.utils.unwrapObservable(A.foreach); A.afterAllRender(g, j); mvcct.utils.currentModel = null }, null, { disposeWhenNodeIsRemoved: g }); $(g).data("__mvcct_template_afterRender__", d) } } })();