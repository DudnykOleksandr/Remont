/* ****************************************************************************
* MVCControlToolkit.Controls.Datetime-2.4.5.js
* Copyright (c) Francesco Abbruzzese. All rights reserved.
* francesco@dotnet-programming.com
* http://www.dotnet-programming.com/
* 
* This software is subject to the the license at http://mvccontrolstoolkit.codeplex.com/license  
* and included in the license.txt file of this distribution.
* 
* You must not remove this notice, or any other, from this software.
*
* ***************************************************************************/
(function () { function q(t) { if (document.getElementById(t + "_Year") != null) { document.getElementById(t + "_Year").onkeypress = c; document.getElementById(t + "_Year").onpaste = p; document.getElementById(t + "_Year").ondrop = p; document.getElementById(t + "_Year").onchange = e } if (document.getElementById(t + "_Month") != null) { document.getElementById(t + "_Month").onchange = e } if (document.getElementById(t + "_Day") != null) { document.getElementById(t + "_Day").onchange = e } if (document.getElementById(t + "_Hours") != null) { document.getElementById(t + "_Hours").onchange = e } if (document.getElementById(t + "_Minutes") != null) { document.getElementById(t + "_Minutes").onchange = e } if (document.getElementById(t + "_Seconds") != null) { document.getElementById(t + "_Seconds").onchange = e } if ($("#" + t + "_Hidden").data("_DateInCalendar")) { var s = $("#" + t + "_Calendar").data("_CalendarOptions"); $("#" + t + "_Calendar").datepicker(s) } e(null, t, true, null, true); $("#" + t + "_Hidden").data("ready", true) } function g(t, s) { t = t + 1; if (s % 4 == 0) { return (t == 9 || t == 4 || t == 6 || t == 11) ? 30 : (t == 2) ? 29 : 31 } else { return (t == 9 || t == 4 || t == 6 || t == 11) ? 30 : (t == 2) ? 28 : 31 } } function r(v, u, s) { if (v == null || v.tagName != "SELECT") { return } var t = 0; if (u == v.options[0].value && s == v.options[v.options.length - 1].value) { return } var w = v.value; v.options.length = 0; for (i = u; i <= s; i++) { if (i < 10) { v.options[t] = new Option("   " + i, i) } else { if (i < 100) { v.options[t] = new Option("  " + i, i) } else { if (i < 1000) { v.options[t] = new Option(" " + i, i) } else { v.options[t] = new Option("" + i, i) } } } t++ } o(v.id, w) } function l(v, u, s) { if (v == null) { return } var t = 0; if (u == v.options[0].value && s == v.options[v.options.length - 1].value) { return } var w = v.value; v.options.length = 0; for (i = u; i <= s; i++) { v.options[t] = new Option(DateTimeMonthes[i], i + 1); t++ } o(v.id, w) } function k(v, u, s) { if (v == null) { return } var t = 0; if (u == v.options[0].value && s == v.options[v.options.length - 1].value) { return } var w = v.value; v.options.length = 0; for (i = u; i <= s; i++) { if (i < 10) { v.options[t] = new Option(" " + i, i) } else { v.options[t] = new Option("" + i, i) } t++ } o(v.id, w) } function m(v, u, s) { if (v == null) { return } var t = 0; if (u == v.options[0].value && s == v.options[v.options.length - 1].value) { return } var w = v.value; v.options.length = 0; for (i = u; i <= s; i++) { if (i < 10) { v.options[t] = new Option("0" + i, i) } else { v.options[t] = new Option("" + i, i) } t++ } o(v.id, w) } function p(s) { s = (s) ? (s) : ((window.event) ? (window.event) : null); if (s == null) { return true } var t = (s.target) ? (s.target) : ((event.srcElement) ? (event.srcElement) : null); if (t == null) { return true } var u; if (s.type == "paste") { u = window.clipboardData.getData("Text") } else { if (s.type == "drop") { u = s.dataTransfer.getData("Text") } else { return true } } for (i = 0; i < u.length; i++) { keyCode = u.charCodeAt(i); if (keyCode == 13 || keyCode == 8) { continue } if ((keyCode >= 48) && (keyCode <= 57)) { continue } else { return false } } t.value = u; return false } function c(s) { s = (s) ? (s) : ((window.event) ? (window.event) : null); if (s == null) { return true } var t = (s.target) ? (s.target) : ((event.srcElement) ? (event.srcElement) : null); if (t == null) { return true } var u = ((s.charCode || s.initEvent) ? s.charCode : ((s.which) ? s.which : s.keyCode)); if (u == 0 || u == 13 || u == 8) { return true } if ((u >= 48) && (u <= 57)) { return true } return false; var v = t.value } function d(s) { Nanno = document.getElementById(s + "_Year").value; Nmese = document.getElementById(s + "_Month").value; Ngiorno = document.getElementById(s + "_Day").value; var t = new Date(Nanno, Nmese - 1, Ngiorno); var u = $("#" + s + "_Calendar"); var v = u.datepicker("option", "dateFormat"); if (v == null) { v = "mm/dd/yy" } u.datepicker("setDate", $.datepicker.formatDate(v, t)) } function a(v, s) { var y = $("#" + s + "_Calendar"); if (v == null) { return } var z = y.datepicker("option", "dateFormat"); if (z == null) { z = "mm/dd/yy" } var t = null; try { t = $.datepicker.parseDate(z, v) } catch (x) { t = new Date() } var w = y.datepicker("option", "minDate"); var A = y.datepicker("option", "maxDate"); var B = null; var u = null; if (w != null) { B = $.datepicker.parseDate(z, w) } if (A != null) { u = $.datepicker.parseDate(z, A) } if (B != null && t < B) { t = B } if (u != null && t > u) { t = u } document.getElementById(s + "_Year").value = t.getFullYear(); document.getElementById(s + "_Month").value = t.getMonth() + 1; document.getElementById(s + "_Day").value = t.getDate(); e(null, s, true) } function f(s, u, w) { var t = $("#" + s + "_Calendar"); var v = t.datepicker("option", "dateFormat"); if (v == null) { v = "mm/dd/yy" } if (u != null) { t.datepicker("option", "minDate", $.datepicker.formatDate(v, u)) } else { t.datepicker("option", "minDate", null) } if (w != null) { t.datepicker("option", "maxDate", $.datepicker.formatDate(v, w)) } else { t.datepicker("option", "maxDate", null) } } function e(P, A, Q, v, ae) { var Z; if (A == null) { P = (P) ? (P) : ((window.event) ? (window.event) : null); if (P == null) { return false } var u = (P.target) ? (P.target) : ((event.srcElement) ? (event.srcElement) : null); if (u == null) { return false } Z = u.id.substring(0, u.id.lastIndexOf("_")) } else { Z = A } if ($("#" + Z + "_Hidden").data("Recursive") == true && v == null) { return } $("#" + Z + "_Hidden").data("Recursive", true); var V; var x; var ag; var z; var ac; var E; var ai = $("#" + Z + "_Hidden").data("_Curr"); var F = ai.getDate(); var R = ai.getMonth(); var y = ai.getFullYear(); var Y = ai.getHours(); var aa = ai.getMinutes(); var D = ai.getSeconds(); var af = $("#" + Z + "_Hidden").data("_MinDate") || null; var J = $("#" + Z + "_Hidden").data("_MaxDate") || null; var ak = $("#" + Z + "_Hidden").data("_ClientDynamicMin") || null; if (ak) { ak = ak() } var M = $("#" + Z + "_Hidden").data("_ClientDynamicMax") || null; if (M) { M = M() } if (ak != null && (af == null || ak > af)) { if (J != null && ak > J) { af = J } else { af = ak } } if (M != null && (J == null || M < J)) { if (af != null && M < af) { J = af } else { J = M } } if (document.getElementById(Z + "_Year") != null) { V = document.getElementById(Z + "_Year").value } else { V = y } if (document.getElementById(Z + "_Month") != null) { x = document.getElementById(Z + "_Month").value } else { x = R } if (document.getElementById(Z + "_Day") != null) { ag = document.getElementById(Z + "_Day").value } else { ag = F } if (document.getElementById(Z + "_Hours") != null) { z = document.getElementById(Z + "_Hours").value } else { z = Y } if (document.getElementById(Z + "_Minutes") != null) { ac = document.getElementById(Z + "_Minutes").value } else { ac = aa } if (document.getElementById(Z + "_Seconds") != null) { E = document.getElementById(Z + "_Seconds").value } else { E = D } var H = new Date(V, x - 1, ag, z, ac, E); if (J != null && J < H) { H = J } if (af != null && af > H) { H = af } V = H.getFullYear() + ""; x = (H.getMonth() + 1) + ""; ag = H.getDate() + ""; z = H.getHours() + ""; ac = H.getMinutes() + ""; E = H.getSeconds() + ""; var X; var O; var W; var U; var B; var ab; var K; var C; var s; var ad; var G; var S; var aj; var w; var t; var I; var N; var ah; $("#" + Z + "_Hidden").data("_Valid", true); X = parseInt(V); if (!isNaN(X)) { if (J == null) { K = null } else { K = J.getFullYear() } if (af == null) { C = null } else { C = af.getFullYear() } if (K != null && K < X) { X = K } if (C != null && C > X) { X = C } if (document.getElementById(Z + "_Year") != null && !$("#" + Z + "_Hidden").data("_DateHidden") && !$("#" + Z + "_Hidden").data("_DateInCalendar")) { r(document.getElementById(Z + "_Year"), C, K) } if ((K == null || K >= X) && (C == null || C <= X)) { s = 11; ad = 0; if (K == X) { s = J.getMonth() } if (C == X) { ad = af.getMonth() } O = parseInt(x); if (!isNaN(O)) { O = O - 1; if (ad > O) { O = ad } if (s < O) { O = s } if (ae || y == C || y == K || X == C || X == K) { if (document.getElementById(Z + "_Month") != null && !$("#" + Z + "_Hidden").data("_DateHidden") && !$("#" + Z + "_Hidden").data("_DateInCalendar")) { l(document.getElementById(Z + "_Month"), ad, s) } } G = 1; S = g(O, X); if (K == X && s == O) { S = J.getDate() } if (C == X && ad == O) { G = af.getDate() } W = parseInt(ag); if (!isNaN(W)) { if (G > W) { W = G } if (S < W) { W = S } if (document.getElementById(Z + "_Day") != null && !$("#" + Z + "_Hidden").data("_DateHidden") && !$("#" + Z + "_Hidden").data("_DateInCalendar")) { k(document.getElementById(Z + "_Day"), G, S) } aj = 0; w = 23; if (K == X && s == O && W == S) { w = J.getHours() } if (C == X && ad == O && W == G) { aj = af.getHours() } U = parseInt(z); if (!isNaN(U)) { if (w < U) { U = w } if (U < aj) { U = aj } if (document.getElementById(Z + "_Hours") != null) { m(document.getElementById(Z + "_Hours"), aj, w) } t = 0; I = 59; if (K == X && s == O && W == S && w == U) { I = J.getMinutes() } if (C == X && ad == O && W == G && aj == U) { t = af.getMinutes() } B = parseInt(ac); if (!isNaN(B)) { if (I < B) { B = I } if (t > B) { B = t } if (document.getElementById(Z + "_Minutes") != null) { m(document.getElementById(Z + "_Minutes"), t, I) } N = 0; ah = 59; if (K == X && s == O && W == S && w == U && I == B) { ah = J.getSeconds() } if (C == X && ad == O && W == G && aj == U && t == B) { N = af.getSeconds() } ab = parseInt(E); if (!isNaN(ab)) { if (ah < ab) { ab = ah } if (ab < N) { ab = N } if (document.getElementById(Z + "_Seconds") != null) { m(document.getElementById(Z + "_Seconds"), N, ah) } } else { $("#" + Z + "_Hidden").data("_Valid", false) } } else { $("#" + Z + "_Hidden").data("_Valid", false) } } else { $("#" + Z + "_Hidden").data("_Valid", false) } } else { $("#" + Z + "_Hidden").data("_Valid", false) } } else { $("#" + Z + "_Hidden").data("_Valid", false) } } } else { $("#" + Z + "_Hidden").data("_Valid", false) } if ($("#" + Z + "_Hidden").data("_DateInCalendar")) { f(Z, af, J) } var T = false; if ($("#" + Z + "_Hidden").data("_Valid")) { if (Q == true || (A == null && (y != X || R != O || F != W || Y != U || aa != B || D != ab))) { T = true } y = X; R = O; F = W; Y = U; aa = B; D = ab } if (!T) { $("#" + Z + "_Hidden").data("Recursive", false); return true } $("#" + Z + "_Hidden").data("_Curr", new Date(y, R, F, Y, aa, D)); if (document.getElementById(Z + "_Year") != null) { o(Z + "_Year", y) } if (document.getElementById(Z + "_Month") != null) { o(Z + "_Month", R + 1) } if (document.getElementById(Z + "_Day") != null) { o(Z + "_Day", F) } if ($("#" + Z + "_Hidden").data("_DateInCalendar")) { d(Z) } if (document.getElementById(Z + "_Hours") != null) { o(Z + "_Hours", Y) } if (document.getElementById(Z + "_Minutes") != null) { o(Z + "_Minutes", aa) } if (document.getElementById(Z + "_Seconds") != null) { o(Z + "_Seconds", D) } var L = $("#" + Z + "_Hidden").data("_Curr"); h(Z); $("#" + Z + "_Hidden").data("_ClientDateChanged")(L.getTime()); $("#" + Z + "_Hidden").trigger("DateTimeInput_Changed"); $("#" + Z + "_Hidden").data("Recursive", false); return true } function o(v, u) { var t = document.getElementById(v); if (t.tagName == "SELECT") { u = parseInt(u); for (var s = t.options.length - 1; s >= 0; s--) { if (parseInt(t.options[s].value) <= u) { t.selectedIndex = s; return } } t.selectedIndex = 0 } else { if ((u === null) || (u === undefined)) { u = "" } t.value = u } } function b(z, w, t) { if (!$("#" + z + "_Hidden").data("_Curr")) { return } var y = $("#" + z + "_Hidden").data("_Curr"); if (y == null) { return } var u = y.getTime(); if (t == 1 && w >= u) { return } if (t == 2 && w <= u) { return } var v = new Date(w); var s = $("#" + z + "_Hidden").data("_MinDate"); var x = $("#" + z + "_Hidden").data("_MaxDate"); if (s != null && v < s) { v = s } if (x != null && v > x) { v = x } if (document.getElementById(z + "_Hours") != null) { if (document.getElementById(z + "_Year") != null) { o(z + "_Year", v.getFullYear()); e(null, z, false, true) } if (document.getElementById(z + "_Month") != null) { o(z + "_Month", v.getMonth() + 1); e(null, z, false, true) } if (document.getElementById(z + "_Day") != null) { o(z + "_Day", v.getDate()); e(null, z, false, true) } if (document.getElementById(z + "_Hours") != null) { o(z + "_Hours", v.getHours()); e(null, z, false, true) } if (document.getElementById(z + "_Minutes") != null) { o(z + "_Minutes", v.getMinutes()); e(null, z, false, true) } if (document.getElementById(z + "_Seconds") != null) { o(z + "_Seconds", v.getSeconds()); e(null, z, true, true) } } else { if (document.getElementById(z + "_Year") != null) { o(z + "_Year", v.getFullYear()); e(null, z, false, true) } if (document.getElementById(z + "_Month") != null) { o(z + "_Month", v.getMonth() + 1); e(null, z, false, true) } if (document.getElementById(z + "_Day") != null) { o(z + "_Day", v.getDate()); e(null, z, true, true) } } if ($("#" + z + "_Hidden").data("_DateInCalendar")) { d(z) } } function j(s) { return $("#" + s + "_Hidden").data("_Curr") } window.MvcControlsToolkit_DateTimeInput_SetString = function (t, u) { clientID = t.id.substring(0, t.id.lastIndexOf("_")); var s = null; if (u == null || u == "") { s = new Date() } else { s = MvcControlsToolkit_Parse(u, MvcControlsToolkit_DataType_DateTime) } b(clientID, s.getTime(), 3) }; window.MvcControlsToolkit_DateTimeInput_Set = function (t, u, v, w) { clientID = t.id.substring(0, t.id.lastIndexOf("_")); if ($("#" + t.id).length == 0 || (!$("#" + clientID + "_Hidden").data("_Curr")) || (!($("#" + clientID + "_Hidden").data("ready") || false))) { var s = function () { MvcControlsToolkit_DateTimeInput_Set(t, u, v, w) }; setTimeout(s, 0); return } if (u == null || u == "") { u = new Date() } b(clientID, u.getTime(), 3) }; window.MvcControlsToolkit_DateTimeInput_SetById = function (v, s, t, u) { if (s == null || s == "") { s = new Date() } b(v + "__", s.getTime(), 3) }; window.MvcControlsToolkit_DateTimeInput_Get = function (s, t) { clientID = s.id.substring(0, s.id.lastIndexOf("_")); if (!$("#" + clientID + "_Hidden").data("_Curr")) { return null } if (!($("#" + clientID + "_Hidden").data("ready") || false)) { return null } return $("#" + clientID + "_Hidden").data("_Curr") }; window.MvcControlsToolkit_DateTimeInput_GetById = function (t, s) { return $("#" + t + "___Hidden").data("_Curr") }; window.MvcControlsToolkit_DateTimeInput_BindChange = function (t, s) { $("#" + t + "___Hidden").bind("DateTimeInput_Changed", s) }; window.MvcControlsToolkit_DateTimeInput_UnbindChange = function (t, s) { $("#" + t + "___Hidden").unbind("DateTimeInput_Changed", s) }; window.MvcControlsToolkit_DateTimeInput_GetString = function (s) { clientID = s.id.substring(0, s.id.lastIndexOf("_")); return MvcControlsToolkit_Format(j(clientID), "s", MvcControlsToolkit_DataType_DateTime, "", "") }; function n(u, t) { if (u == null || t == null) { return } var s = $("#" + u + "_Hidden").data("_UpdateList"); if (!s) { s = []; $("#" + u + "_Hidden").data("_UpdateList", s) } s.push(t) } function h(u) { var s = $("#" + u + "_Hidden").data("_UpdateList"); if (!s || s.length == 0) { return } for (var t = 0; t < s.length; t++) { e(null, s[t], true) } } mvcct = window.mvcct || {}; mvcct.basicControls = mvcct.basicControls || {}; mvcct.basicControls.dateInputInitialize = q; mvcct.basicControls.dateTimeInputUpdateFromCalendar = a; mvcct.basicControls.setDateInput = b; mvcct.basicControls.addToUpdateList = n })();